#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
# spark.master                     spark://master:7077
# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer
# spark.driver.memory              5g
# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers="one two three"
#
#

spark.ui.port 4240
spark.master spark://131.179.96.205:7277
#spark.master spark://131.179.96.205:7277
spark.submit.deployMode client

spark.driver.memory 4g
spark.executor.memory 32g
spark.executor.cores 16
spark.default.parallelism 64


# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/jdk12u-dev/build/linux-x86_64-server-release/jdk 
# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/noconc/build/linux-x86_64-server-release/jdk 

# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/jdk-chenxi/build/linux-x86_64-server-release/jdk 
# spark.executorEnv.JAVA_HOME=/home/haoran/tp-threads/build/linux-x86_64-server-release/jdk 
#spark.executorEnv.JAVA_HOME=/home/haoran/tp-threads/build/linux-x86_64-server-slowdebug/jdk 

#spark.executorEnv.JAVA_HOME=/home/haoran/jdk-12.0.2
spark.executorEnv.JAVA_HOME=/home/haoran/jdk12u/build/linux-x86_64-server-release/jdk 

# for test single server tracing spark:
# spark.executor.extraJavaOptions     -XX:+UnlockExperimentalVMOptions -XX:ShenandoahHeapRegionSize=512M -XX:ShenandoahMaxRegionSize=512M -Xms32g -XX:+UseShenandoahGC -XX:+PrintGCDetails -XX:ParallelGCThreads=1 -XX:ConcGCThreads=8 -XX:-UseCompressedOops -XX:MetaspaceSize=268435456 -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:ShenandoahUpdateRefsEarly=on

# spark.executor.extraJavaOptions     -XX:+UnlockExperimentalVMOptions -XX:ShenandoahHeapRegionSize=512M -XX:ShenandoahMaxRegionSize=512M -Xms32g -XX:+UseShenandoahGC -XX:+PrintGCDetails -XX:ParallelGCThreads=1 -XX:ConcGCThreads=3 -XX:-UseCompressedOops -XX:+SemeruEnableMemPool -XX:MetaspaceSize=268435456 -Xlog:heap=debug,semeru=debug,semeru+rdma=debug,semeru+mem_compact=debug,semeru+alloc=debug,semeru+mem_trace=debug -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:-ShenandoahPacing -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahInitFreeThreshold=80 -XX:ShenandoahLearningSteps=100 -XX:ShenandoahMinFreeThreshold=40 -XX:ShenandoahGarbageThreshold=80 -XX:ShenandoahGuaranteedGCInterval=2000000






#shenandoah 5g
#--------------------------------------------------------------------------------------------------------------------------------------------------

#lr
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=4 -XX:PrefetchNum=819200 -XX:PrefetchSize=10000000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahUpdateRefsEarly=off -XX:ShenandoahLearningSteps=40 -XX:ShenandoahPrefetchBufferSize=2048 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=85 -XX:ShenandoahMinFreeThreshold=40


#kmeans
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=4 -XX:PrefetchNum=16384 -XX:PrefetchSize=10000000 -XX:PrefetchQueueThreshold=0 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=40 -XX:ShenandoahLearningSteps=45 -XX:ShenandoahMinFreeThreshold=25 -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails 
# -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=40



# tc
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=65 
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=50 



# Normal Others
# spark.executor.extraJavaOptions      -Xms32g -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -XX:-UseCompressedOops -XX:+PrintGCDetails -XX:ParallelGCThreads=16 

#--------------------------------------------------------------------------------------------------------------------------------------------------





#shenandoah 9g
#--------------------------------------------------------------------------------------------------------------------------------------------------

#lr
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=100000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahUpdateRefsEarly=off -XX:ShenandoahLearningSteps=55 -XX:ShenandoahPrefetchBufferSize=2048 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=85 -XX:ShenandoahMinFreeThreshold=25 

#spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=100000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahLearningSteps=50 -XX:ShenandoahPrefetchBufferSize=2048 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=85 -XX:ShenandoahMinFreeThreshold=25 



#kmeans
#spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=4 -XX:PrefetchNum=16384 -XX:PrefetchSize=10000000 -XX:PrefetchQueueThreshold=0 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=40 -XX:ShenandoahLearningSteps=45 -XX:ShenandoahMinFreeThreshold=25 -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails 



# tc
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=65 


# gpr spr
# spark.executor.extraJavaOptions      -XX:-UseCompressedOops -XX:MetaspaceSize=128M -Xms32g -Xlog:prefetch=debug -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:+UnlockExperimentalVMOptions -XX:ShenandoahPrefetchBufferSize=1024 -XX:+UseShenandoahGC -XX:ParallelGCThreads=32 -XX:ConcGCThreads=128 -XX:-UseCompressedOops -XX:-ShenandoahConcurrentScanCodeRoots -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000 -XX:+PrintGCDetails -XX:ShenandoahInitFreeThreshold=90 -XX:ShenandoahMinFreeThreshold=75 

#90 75



# Normal Others
# spark.executor.extraJavaOptions      -Xms32g -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -XX:-UseCompressedOops -XX:+PrintGCDetails -XX:ParallelGCThreads=16 
# Normal SPR
# spark.executor.extraJavaOptions      -Xms32g -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -XX:-UseCompressedOops -XX:+PrintGCDetails -XX:ParallelGCThreads=16 -XX:-ShenandoahConcurrentScanCodeRoots -XX:MetaspaceSize=128M -Xnoclassgc -XX:ShenandoahRefProcFrequency=0 -XX:+DisableExplicitGC -XX:ShenandoahGuaranteedGCInterval=2000000

#--------------------------------------------------------------------------------------------------------------------------------------------------




# onlyprefetch lr
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=8 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
# only prefetch kmeans
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=512M -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=16 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024






# --------------------------5g:--------------------------
# Normal: Kmeans
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=512M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M
# Normal: LR & others
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M

# spark.executor.extraJavaOptions	    -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:+UseG1GC -XX:ConcGCThreads=3
# Normal: Skew
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=1g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=1g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# Normal: CC
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=1g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M



# Haoran LR: only one conc no rebuild
# prefetch 16
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=2g -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
# default prefetch
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=2g -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
#-Xlog:prefetch=debug 

# Haoran GraphXPagerank: only one conc no rebuild
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=70 -XX:MaxNewSize=2g -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=56M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=3 -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024


# Haoran GroupBy nothing
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=90 -XX:MaxTenuringThreshold=0 -XX:ParallelGCThreads=16 -XX:MaxNewSize=512M -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=1 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=90 -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=1 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# Haoran TC no rebuild
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=60 -XX:ParallelGCThreads=16 -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# Haoran Kmeans: no rebuild one conc
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=70 -XX:ParallelGCThreads=16 -XX:MaxNewSize=512M -Xnoclassgc -XX:MetaspaceSize=80M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=48M -XX:MarkStackSizeMax=48M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=512 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=256M -XX:ParallelGCThreads=16 -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=80M -XX:+UseG1GC

# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=65 -XX:MaxNewSize=512M -Xnoclassgc -XX:MetaspaceSize=80M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=48M -XX:MarkStackSizeMax=48M -XX:ConcGCThreads=3 -XX:PrefetchThreads=1 -XX:PrefetchNum=4096 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# Haoran CC have rebuild
# spark.executor.extraJavaOptions      -XX:InitiatingHeapOccupancyPercent=65 -XX:ParallelGCThreads=16 -XX:MaxNewSize=1g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=1024 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024










# Normal: LR Semeru 
# "-XX:InitiatingHeapOccupancyPercent=100" "-XX:MaxNewSize=4g" "-Xms32g" "-XX:+UseG1GC" "-XX:+PrintGCDetails" "-XX:-UseCompressedOops" "-XX:MetaspaceSize=128M" "-XX:+UseG1GC" "-XX:ConcGCThreads=3" "-XX:MarkStackSize=64M" "-XX:MarkStackSizeMax=64M"
# spark.executor.extraJavaOptions	    -XX:InitiatingHeapOccupancyPercent=100 -XX:MaxNewSize=4g -XX:ParallelGCThreads=16 -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M



# Normal: Kmeans
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=512M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=64M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M

# Normal: LR & others -XX:MaxNewSize=6g 
spark.executor.extraJavaOptions	     -XX:MaxNewSize=4g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# Normal: SPR
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# Normal: Skew CC
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M


# Haoran LR: 230s use noconc
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=4g -XX:+UseG1GC -XX:ParallelGCThreads=16 -Xms32g -XX:+PrintGCDetails
# Haoran LR: 250s only one conc no rebuild
# spark.executor.extraJavaOptions	     -XX:ParallelGCThreads=16 -XX:MaxNewSize=3584M -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
#LR 340s
#spark.executor.extraJavaOptions	     -XX:MaxNewSize=3584M -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
#spark.executor.extraJavaOptions	     -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024
#-Xlog:prefetch=debug 
# for estimation 44%
# spark.executor.extraJavaOptions	     -XX:ParallelGCThreads=16 -XX:MaxNewSize=3584M -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=3 -XX:PrefetchNum=327680000 -XX:PrefetchSize=10000000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# for footprint 13g
# spark.executor.extraJavaOptions	     -XX:ParallelGCThreads=16 -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=1 -XX:PrefetchThreads=2 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024



# Haoran GraphXPagerank: only one conc no rebuild
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=70 -XX:ParallelGCThreads=16 -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# Haoran SparkPagerank: no rebuild
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=60 -XX:ParallelGCThreads=16 -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=8192 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024


# Haoran GroupBy no conc
# spark.executor.extraJavaOptions	    -XX:MaxTenuringThreshold=0 -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# Haoran GroupBy do rebuild
# spark.executor.extraJavaOptions	     -XX:MaxTenuringThreshold=0 -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=1 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=1 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024

# Haoran TC no rebuild 195s
# spark.executor.extraJavaOptions      -XX:ParallelGCThreads=16 -XX:InitiatingHeapOccupancyPercent=60 -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# For estimation 20%
# spark.executor.extraJavaOptions      -XX:ParallelGCThreads=16 -XX:InitiatingHeapOccupancyPercent=60 -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=2 -XX:PrefetchNum=327680000 -XX:PrefetchSize=10000000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024


# Haoran Kmeans: use this disable next several concurrent no rebuild
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=512M -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=512 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# For estimation 20%
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=512M -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=327680000 -XX:PrefetchSize=10000000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024





# spark.executor.extraJavaOptions	     -XX:MaxNewSize=512M -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=512 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# spark.executor.extraJavaOptions	     -XX:InitiatingHeapOccupancyPercent=47 -XX:MaxNewSize=512M -XX:ParallelGCThreads=16 -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=512 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=384M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:+UseG1GC -Xnoclassgc -XX:ParallelGCThreads=16 -XX:MetaspaceSize=96M -XX:ConcGCThreads=1

#-Xlog:prefetch=debug 


# Haoran CC no rebuild
# spark.executor.extraJavaOptions      -XX:InitiatingHeapOccupancyPercent=58 -XX:ParallelGCThreads=16 -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=64M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=128 -XX:PrefetchSize=10000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024














## Time control

spark.executor.heartbeatInterval    20s
spark.storage.blockManagerSlaveTimeoutMs 1200000
spark.network.timeout               1200s
spark.scheduler.blacklist.unschedulableTaskSetTimeout 1200s
spark.rpc.lookupTimeout             1200s
spark.files.fetchTimeout            1200s
# -agentlib:jvmti_class_instrument 
# -agentpath:/mnt/ssd/haoran/System-Dev-Testcase/jvmti/ClassInstrumentWithRescribo/libjvmti_class_instrument.so
# spark.executor.extraJavaOptions	    -XX:NewRatio=8 -agentlib:jvmti_class_instrument -Xms32g -XX:+UseG1GC -XX:+TPThreadEnable -XX:+PrintGCDetails -XX:MarkStackSize=256M -XX:MarkStackSizeMax=256M -Xlog:prefetch=debug,tpthread=debug -XX:PrefetchThreads=4 -XX:PrefetchNum=100 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=10 -XX:G1PrefetchBufferSize=128

# spark.executor.extraJavaOptions	    -XX:NewRatio=8 -agentlib:jvmti_class_instrument -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:MarkStackSize=128M -XX:MarkStackSizeMax=128M -Xlog:prefetch=debug -XX:PrefetchThreads=2 -XX:PrefetchNum=100 -XX:PrefetchSize=10000 -XX:PrefetchQueueThreshold=10 -XX:G1PrefetchBufferSize=256


# spark.executor.extraJavaOptions	      -agentlib:jvmti_class_instrument -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails 
# spark.executor.extraJavaOptions	    -XX:NewRatio=8 -agentlib:jvmti_class_instrument -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails 
# spark.executor.extraJavaOptions	    -XX:NewRatio=8 -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails
# spark.executor.extraJavaOptions	    -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails

#spark.executor.extraJavaOptions    -Xms32g -Xmn32g -XX:MetaspaceSize=268435456 -XX:+PrintGCDetails
#spark.executor.extraJavaOptions   -Xms32g -XX:+UseParallelGC -XX:ParallelGCThreads=16 -XX:-UseCompressedOops -XX:+PrintGCDetails 
#spark.executor.extraJavaOptions    -Xms32g -XX:+UseParallelGC -XX:+PrintGCDetails                                                                                                                
#spark.executor.extraJavaOptions    -Xms32g -XX:NewRatio=0 -XX:MetaspaceSize=268435456 -XX:+PrintGCDetails
#spark.executor.extraJavaOptions    -XX:ConcGCThreads=16 -XX:G1RSetRegionEntries=4096 -XX:MaxTenuringThreshold=3 -Xms32g -XX:SemeruMemPoolMaxSize=32G -XX:NewRatio=6 -XX:+UseG1GC -XX:ParallelGCThreads=32 -XX:G1HeapRegionSize=512M -XX:MetaspaceSize=268435456 -XX:TLABSize=4096 -XX:-UseCompressedOops -XX:+SemeruEnableMemPool -XX:+PrintGCDetails 
#-Xlog:heap=debug,gc=debug,gc+marking=debug,semeru+alloc=debug,semeru+rdma=debug,semeru+mem_trace=debug,semeru+compact=debug

# spark.executor.extraJavaOptions	     -XX:MaxNewSize=4g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -Xlog:prefetch=debug -XX:ConcGCThreads=2 -XX:PrefetchThreads=2 -XX:PrefetchNum=4096 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024


# Haoran SPR:
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=1g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=2 -XX:PrefetchThreads=1 -XX:PrefetchNum=16384 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=16 -XX:G1PrefetchBufferSize=1024
#-Xlog:prefetch=debug 
# Haoran CC:
# spark.executor.extraJavaOptions	     -XX:MaxNewSize=2g -Xnoclassgc -XX:MetaspaceSize=128M -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MarkStackSize=32M -XX:MarkStackSizeMax=32M -XX:ConcGCThreads=1 -XX:PrefetchThreads=1 -XX:PrefetchNum=8196 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024


# -XX:NewRatio=8 -XX:TieredStopAtLevel=1 -XX:-TieredCompilation 
# spark.executor.extraJavaOptions     -XX:MaxNewSize=4g -Xnoclassgc -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=2 -Xms32g -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:+TPThreadEnable -XX:PrefetchThreads=2 -XX:PrefetchNum=4096 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=16 -XX:G1PrefetchBufferSize=512 -XX:+PrintGCDetails

# spark.executor.extraJavaOptions      -XX:NewRatio=8 -Xnoclassgc -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=2 -Xms32g -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:+TPThreadEnable -XX:PrefetchThreads=2 -XX:PrefetchNum=4096 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=0 -XX:G1PrefetchBufferSize=1024 -XX:+PrintGCDetails -Xlog:tpthread=info,gc+heap=trace
# spark.executor.extraJavaOptions      -Xnoclassgc -XX:-UseCompressedOops -XX:MetaspaceSize=268435456 -XX:+UseG1GC -XX:ConcGCThreads=2 -Xms32g -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M -XX:+TPThreadEnable -XX:PrefetchThreads=2 -XX:PrefetchNum=4096 -XX:PrefetchSize=1000000 -XX:PrefetchQueueThreshold=64 -XX:G1PrefetchBufferSize=1024 -XX:+PrintGCDetails -Xlog:tpthread=info,gc+heap=trace
# spark.executor.extraJavaOptions	    -XX:NewRatio=8 -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=268435456 -XX:+UseG1GC -XX:ConcGCThreads=4
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=4g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
#
# Normal: Triangle
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=4g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# Normal: SPR
# spark.executor.extraJavaOptions	    -XX:MaxNewSize=2g -Xms32g -XX:+UseG1GC -XX:+PrintGCDetails -XX:-UseCompressedOops -XX:MetaspaceSize=128M -XX:+UseG1GC -XX:ConcGCThreads=3 -XX:MarkStackSize=64M -XX:MarkStackSizeMax=64M
# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/jdk12u-dev/build/linux-x86_64-server-fastdebug/jdk 
# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/jdk12u-dev/build/linux-x86_64-server-slowdebug/jdk 
# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/testjdk/build/linux-x86_64-server-release/jdk 


## Use Semeru JDK for executor
# spark.executorEnv.JAVA_HOME=/mnt/ssd/haoran/jdk-chenxi/build/linux-x86_64-server-release/jdk 
